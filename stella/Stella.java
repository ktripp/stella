package stella;import javax.swing.*;import java.awt.*;import java.awt.geom.Area;import java.awt.event.*;import static java.awt.GraphicsDevice.WindowTranslucency.*;import java.util.HashMap;public class Stella extends JFrame{	private Painting canvas;	private HashMap<String, String> works;	private String workname;		public Stella(String filename) {		super("Stella");		this.setLayout(new BorderLayout());		this.generateArtInfo();		// generate the image and info				canvas = new Painting("img/" + filename);		workname = works.get(filename);				// set the shape of the frame		addComponentListener(new ComponentAdapter() {			public void componentResized(ComponentEvent e) {				// get the outline and set the frame shape!				setShape(new Area(Outline.getOutline(canvas.getBufferedImage())));			}		});		// add the painting to the frame!		this.add(canvas, BorderLayout.CENTER);		this.initializeFrame();	}	public void initializeFrame() {		// artist info and exit button setup		JPanel bottom = new JPanel(new FlowLayout());		bottom.setPreferredSize(new Dimension(100, 375));		bottom.setBackground(java.awt.Color.BLACK);		if (workname != null) {			JLabel work = new JLabel("<html><div style=\"text-align:center;font-size:1.1em;color:#088da5;font-family:'Lucida Sans'\"><p>Frank Stella</p><p>" + workname + "</p></div></html>");			work.setSize(new Dimension(450,50));			work.setSize(work.getSize());			bottom.add(work);		}				// close frame on click	    MouseListener ml = new MouseAdapter ()	    {	        public void mouseClicked (MouseEvent event)	        {	            dispose();	            System.exit(0);	        }	    };	    bottom.addMouseListener(ml);	    bottom.revalidate();	    this.add(bottom, BorderLayout.SOUTH);	    	    // frame settings	    this.setUndecorated(true);		this.setLocationRelativeTo(null);		this.setLocation(500, 100);		this.pack();	}		public void generateArtInfo() {		works = new HashMap<String, String>();		works.put("agbatana.png", "Agbatana III, 1968");		works.put("firuzabad.png", "Firuzabad, 1970");		works.put("harran.png", "Harran II, 1967");		works.put("madinat.png", "Madinat as-Salam I, 1970");		works.put("raqqa.png", "Raqqa II, 1970");	}		public static void main(String[] args) {				// ask for user input to select artwork		JFrame selector = new JFrame();		Object[] options = {"\"Madinat as-Salam I\"",							"\"Harran II\"",							"\"Agbatana III\"",							"\"Raqqa II\"",							"\"Firuzabad\"",							"Enter my own file path"};		String selection = (String) JOptionPane.showInputDialog(selector,											"Select a piece to view.",											"Frank Stella -- Art Selector",											JOptionPane.OK_CANCEL_OPTION,											new ImageIcon(ClassLoader.getSystemResource("img/icon.png")),											options,											null);		// determine returned value		String file = "";		if (selection.equals(options[0]))				file = "madinat.png";		else if (selection.equals(options[1]))				file = "harran.png";		else if (selection.equals(options[2]))				file = "agbatana.png";		else if (selection.equals(options[3]))				file = "raqqa.png";		else if (selection.equals(options[4]))				file = "firuzabad.png";		else {				file = (String) JOptionPane.showInputDialog("Enter a file path to a png image.");		}		final String artpiece = file;				// Determine what the GraphicsDevice can support.		GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();		GraphicsDevice gd = ge.getDefaultScreenDevice();		final boolean isTranslucencySupported = gd.isWindowTranslucencySupported(TRANSLUCENT);		//If shaped windows aren't supported, exit.		if (!gd.isWindowTranslucencySupported(PERPIXEL_TRANSPARENT)) {			JOptionPane.showMessageDialog(selector, "Sorry! Shaped windows are not supported");			System.exit(0);		}		//If translucent windows aren't supported, create an opaque window.		if (!isTranslucencySupported) {			System.err.println("Translucency is not supported, creating an opaque window");		}		// Create the GUI on the event-dispatching thread		SwingUtilities.invokeLater(new Runnable() {			public void run() {				Stella sw = new Stella(artpiece);				// Set the window to 70% translucency, if supported.				if (isTranslucencySupported) {					sw.setOpacity(0.9f);				}				// Display the window.				sw.setVisible(true);			}		});	}}